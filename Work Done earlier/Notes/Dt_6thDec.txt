First steps are of learning:
1. Learn more about process binary format. Both of windows' and linux' (elf, exe and hex), permissions, ISA, ABI, etc.
2. More on usage of readelf and objdump
3. strace usage
4. Always first steps shall be by reading and doing hands on!

->System=OS+Application SW+ System Data+ Your Data

5. Understand everything like inside out of process binary
6. Book: Read till Ch 10 of programming from the Ground UP Book(It gives new perspective)
7. Book: Get hands on Linux Assembly Language Programming by Bob Neveln (It has chapter on elf format and COFF(Common Object File Format))

->Take one small step at a time. One HINT:

8. STEPS:
a. Write an empty file in C, C++, Rust, etc.
b. Compile these files
c. Discover the executable file contents with readelf
d. Then use strace on these executables to generate the sys_call traces
e. Now understand the meaning of every system call in the C-file related executable
f. Do the same for C++ executable

->Eg /*Begin*/ int main(){} /*end*/

9. Do the same with Rust and Python file as well. For Python, instead of interpreting it, compile it and do analysis of the generated executable

->In Linux world file extensions are given least confidence
->Evolution of Binary file format: a.out < COFF < elf

10. https://www.codementor.io/@packt/reverse-engineering-a-linux-executable-hello-world-rjceryk5d

11. Understand usage of GDB
12. Learn Python (It will be useful for making scripts to automate tasks) 

->Importance of Makefile:so in very big build processes which often involve conditional compilations,
 sometimes, we need not reexectue some steps if the dependencies have not changed,
 scripts that are based on Makefile often save several folds of time

->Harvard Architecture has separate caches for data and instructions

->JPEG: "Big Endian", GIF: "Little Endian", PNG: "Big Endian", BMP: "Little Endian", MPEG: "Big Endian". TIFF: "Either"
Cryptography: That playlist can be postponed as we might get drifted!

Made script makeit.sh that make all the files like disassemble, strace, objdump, readelf, etc.
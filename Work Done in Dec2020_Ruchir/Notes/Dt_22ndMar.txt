Cohen's Paper Notes
1. The paths of sharing, transitivity of information flow, and generality of information interpretation are identified as the key properties in the protection from computer viruses.
2. We define a computer ‘virus’ as a program that can ‘infect’ other programs by modifying them to include a possibly evolved copy of itself.
3. V+E+triggering_cond=I+damage(V=Virus/malicious code, E=normal Executable file, I=Infected file)
4. This I further infects other files
5. The key property of a virus is its ability to infect other programs, thus reaching the transitive closure of sharing between users.
6. Viruses are not to be always used for evil purposes. For example a Compression virus, compresses each executable file by attatching a compression virus(infection) to a executable file, and then decompressing those files as and when required. There is a time and space tradeoff. It saves space by compressing but increases delay as decompression makes it slow to run a executable.
7. Viruses can be as destructive as an infinite loop(that we indeed made)
8. Protection Mechanisms-
a. Basic Limitation
i) Transitivity of information sharing accross users/devices without the differentiation between the information being data or program.
ii) information(data) + interpretation = meaning(behaviour)
iii) If information is interpreted as program then it can be infected.
iv) Thus sharing, transitivity of information flow, and generality of interpretation(interpretation as data or program) thus allow a virus to spread to the transitive closure of information flow starting at any given source.
v) If there is no sharing, there can be no dissemination of information across information boundaries, and thus no external information can be interpreted, and a virus cannot spread outside a single partition. This is called ‘isolationism.’
vi) infection requires the modification of interpreted information(fixed first order functionality)
b. Partition Models(Partition system into closed proper subsets)
i) limited isolationalism(very less or no communicaiton btw computers)
ii) Compartment policy
c. Flow Models
i) Each information carries a distance attribute which shows the distance of the information from the origin accross the devices. 
ii) After a certain threshold of distance the information becomes unusable (just like TTL)
iii) 'flow list' policy maintains a list of all users who have had an effect on each object.
iv) It's like Topological Sort.
d. Limited Interpretation
i) LISP, APL, and Basic are all examples of fixed interpretation schemes that can interpret information in general ways. Since their ability to interpret is general, it is possible to write a program in any of these languages that infects programs in any or all of them.
ii) In a limited interpretation system, all the functions are not accessible to execute because every function in a limited system must also be able to be performed in a general system. 
e. Precision Problems
9. Cure of Computer Viruses(Detection and removal of Computer Virus)
a. Detection of Viruses
i) Contradiction- Determination of viruses from its appearance is undecidable
b. Evolution of Virus
i) Equivalence of two programs by their appearance is undecidable
ii) Two unequivalent Evolutions can both be viruses.
iii) The viral activity of a compiler is only triggered by particular inputs, and thus in order to detect triggering, one must be able to detect a virus by its appearance. Since precise detection by behavior in this case leads to precise detection by the appearance of the inputs, and since we have already shown that precise detection by appearance is undecidable, it follows that precise detection by behavior is also undecidable.
c. Limited Viral Protection
i) no infection can exist that cannot be detected, and no detection mechanism can exist that cannot be infected.
ii) Since we cannot precisely detect a virus, we should define potentially iilegitimate use in a decidable and easily computable way.
iii) If an event is relatively rare in ‘normal’ use, it has high information content when it occurs, and we can define a threshold at which reporting is done.
iv) If enough resources are available, flow list can be kept, which track all users who have affected a given file.
v) Users that appear in many incoming flow lists or the rate at which users enter could be considered suspicious
vi) But, there's a problem. If the threshold is known by the attacker, then the virus can be made to work well within it.
vii) If even the simplest of the virus is to be detected, it's owner must be known.
10. The virus essentially proves that integrity control must be considered an essential part of any secure operating system.
11. It is therefore the major conclusion of this paper that the goals of sharing in a general purpose multilevel security system may be in such direct opposition to the goals of viral security as to make their reconciliation and coexistence impossible.
12. 